package main

import (
	"fmt"
	"time"
)

type res struct {
	Code int `json:"code"`
	Status string `json:"status"`
	Data interface{} `json:"data"`
}
type Usb interface {
	Start(int,int)bool
}
type  Phone struct {

}


func (c Phone)Start(i int,j int) (bool) {
	if i > 7 {
		return true
	}
	return false
}
func  test(u Usb){
	fmt.Println(30)
}
func main() {
	ch := make(chan int,1)
	time.AfterFunc(time.Second, func() {
		close(ch)
	})
	for  {
		select {
		case _,ok:= <- ch:
			if !ok {
				fmt.Println("通道已经关闭")
				break
			}
			fmt.Println("continue")

		}
		}


}
func single(ch chan<- int) {
	ch<-1
}
//func main () {
//	var new Phone
//	test(new)
//	return
//	url := "https://ding.lqlovehai.com/api/v/v1/v"
//	resp, _ := http.Get(url)
//	body, _ := ioutil.ReadAll(resp.Body)
//	var s res
//	json.Unmarshal(body,&s)
//	fmt.Println(s.Code)
//
//
//}

//func main() {
//	str := `
//{"code":0,"data":[[1621440000,46414337],[1621526400,56749405],[1621612800,22680804],[1621699200,17021527],[1621785600,21137754],[1621872000,18006441],[1621958400,20034019],[1622044800,23062096],[1622131200,23463508],[1622217600,15795736],[1622304000,20482708],[1622390400,14828324]]}
//`
//	var data AutoGenerated
//	json.Unmarshal([]byte(str), &data)
//	fmt.Printf("%+v", data.Code)
//}
//
//
//type AutoGenerated struct {
//	Code int     `json:"code"`
//	Data [][]int `json:"data"`
//}